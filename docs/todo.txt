Update Data and Conditioning
- Add the ExtraArgument to each DataGetter [x]
- Add preprocessing logic to RGBDataGetter [x]
- Add RayGetter (maybe merge with camera getter) [x]
- Add all preprocessing logit to datagetters [x]
- Create dataspec constructor [x]
- Update dynamic dataset [x]
- Make datatree statically typed [x]
- Remove prepare preprocessing [x]
- Update TrainState to use DynamicDataset [x]
- Refactor TrainState to use Pydantic [x]
- Add diffusion config to train state [x]
- Update run_train_lora with new dynamic dataset [x]
- Move dynamic fields out from train_state [x]
- Add meta by default to DynamicDataset  [x]
- Add random and center crop to training loop (dynamic dataset?) [x]
- Replace "best" metric to be dynamic [x]
- Test refactor [x]
- Debug training [x]
- Fix save path bug [x]
- Add command line args [x]


Start ControlNet
- Add conditioning signals [x]
- Test new signals [x]
- Create controlnet model [x]
- Make conditioning signals work with controlnet [x]
- Add conditioning for evaluation [x]
- Update inference with controlnet [x]
- Update training with controlnet [x]
- Make pydantic work with yaml files [x]
- Fix dimension bugs [x]
- Test controlnets [x]
- Train small sd model on one image [x]


Merge with NeuRAD
- Refactor dataset configs to factory type [x]
- Bugfix new dataset configs [x]
- Update NeuRAD code with new pipeline [x]
- Make new argparser for neurad training [#]
- Build new Singularity image [x]
- Change code to be compatible with Tyro [x]
- Fix broken changes to lora configs across code [x]
- Update neurad configs [x]
- Update vscode launch scripts for diffusion training [x]
- bugfix: Interpolate ray conditioning between rays (128,128)->(512,512) [x]
- bugfix: Fix bugs in NeuRAD [x]
- rsync image to other PC [x]
- Create SLURM single LoRA [x]
- Setup HAL directories [x]
- Train SLURM single LoRA on HAL [x]
- Create SLURM lora batch [x]
- Change batch to use array instead [x]
- Create SLURM neurad [x]
- Migrate to Berzelius [x]
- Rebuild image [x]
- Create SLURM batch for neurad
- Add new pipeline to training [x]
- Test new pipeline [x]
- Train small cn model [x]
- Add controlnet support to neurad [x]
- Test controlnet [x]


Debug NeuRAD Integration
- Add anomaly detection to diffusion output [x]
- Detach neurad output gradient [x]
- Investigate transform ray bundle [x]
- Add anomaly detection to neurad [x]
- Fix diffusion seed [x]
- Log images during training [x]
- Fix augmentation to one side (0 - D instead of -D - D) [x]
- Train more augmentation losses
- Train with finetuned diffusion


Run experiments
- Update launch scripts with correct parameters [x]
- Train base neurad across 5 scenes [x]
- Update base model symlinks [x]
- Generate new reference renders
- Update lora weights symlinks
- Sweep augment loss (3), augment_peak (2), noise_start (2), noise (3),  (base diffusion) 
- Finetune diffusion models across scenes (5) for each config (4)   
- Use optimal parameters, sweep finetuned diffusion models (un4, uncn4, un128, uncn128) 