project_name: ImagineDriving

conditioning_signals: 
  - cn_ray_6_front_camera

datasets:
  train_data:
    dataset: pandaset
    path: "data/pandaset"
    data_getters:
      rgb:
        camera: "front_camera"

      prompt: {}
      meta: {}

    data_tree: 
      pandaset: 
        #001-124: "0::1"
        #001-030: "0::1"
        001: "0::"
        #001: "16::"
        #001: [01]
          

  val_data: 
    dataset: pandaset
    path: "data/pandaset"
    data_getters:
      rgb:
        camera: "front_left_camera"

      prompt: {}
      meta: {}

    data_tree: 
      pandaset: 
        #001-124: "0::16"
        #030-050: "0::16"
        #139-158: "0::16"
        #101: "0::16"
        001: "0::8"
        #001: "0:16:2"
        #001: [01]

  render_data: 
    dataset: pandaset
    path: "data/pandaset"
    data_getters:
      rgb:
        camera: "front_left_camera"

      prompt: {}
      meta: {}

    data_tree: 
      pandaset: 
        001: "::20"
        #011: "20::50"
        #016: "20::50"
        #028: "20::50"
        #053: "20::50"
        #063: "20::50"
        #084: "20::50"
        #106: "20::50"
        #123: "20::50"
        #158: "20::50"

model_type: sd
model_id: stabilityai/stable-diffusion-2-1

seed: 0
train_batch_size: 1
dataloader_num_workers: 0
frac_dataset_per_epoch: 1.0

max_grad_norm: 1.0

n_epochs: 10000
val_freq: 100
checkpointing_steps: 2000

train_noise_strength: 0.1
train_noise_num_steps: null

val_noise_num_steps: 50
val_noise_strength: 0.1

learning_rate: 0.0001
adam_beta1: 0.9
adam_beta2: 0.999
adam_weight_decay: 0.01
adam_epsilon: 0.00000001

lr_scheduler: "constant"
lr_warmup_steps: 1000

#lr_scheduler: "cosine_with_restarts"
#lr_warmup_steps: 1000
#lr_scheduler_kwargs:
#  num_cycles: 2

#center_crop: True
center_crop: False
flip_prob: 0

#center_crop: False
#flip_prob: 0
#flip_prob: 0.5

use_debug_loss: False
use_recreation_loss: True

use_controlnet: False

control_lora_rank_linear: 4
control_lora_rank_conv2d: 4
lora_target_ranks: 
  unet: 
    downblocks: 
      attn: 4
      resnet: 4
      ff: 4
      proj: 4
      
    midblocks:
      attn: 4
      resnet: 4
      ff: 4
      proj: 4
    upblocks:
      attn: 4
      resnet: 4
      ff: 4
      proj: 4


trainable_models:
  - unet

logging_dir: logs/finetune/sd
output_dir: outputs/finetune/sd

loggers: ["wandb"]
#loggers: []

